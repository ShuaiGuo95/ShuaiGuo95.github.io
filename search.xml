<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>鹧鸪天·别后盼相逢</title>
      <link href="/2021/08/31/zhe-gu-tian-bie-hou-pan-xiang-feng/"/>
      <url>/2021/08/31/zhe-gu-tian-bie-hou-pan-xiang-feng/</url>
      
        <content type="html"><![CDATA[<h1 id="鹧鸪天·别后盼相逢"><a href="#鹧鸪天·别后盼相逢" class="headerlink" title="鹧鸪天·别后盼相逢"></a>鹧鸪天·别后盼相逢</h1><p>芊芊玉臂白素手，明眸皓齿樱桃口。微微细雨金陵月，斑斑树影夏夜风。<br>从别后，盼相逢，几回魂梦与君同。何当共赏秦淮水，风月皎洁似梦中。</p>]]></content>
      
      
      <categories>
          
          <category> 诗词歌赋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 词 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>咏芙蓉仙子</title>
      <link href="/2021/08/31/yong-fu-rong-xian-zi/"/>
      <url>/2021/08/31/yong-fu-rong-xian-zi/</url>
      
        <content type="html"><![CDATA[<h1 id="咏芙蓉仙子"><a href="#咏芙蓉仙子" class="headerlink" title="咏芙蓉仙子"></a>咏芙蓉仙子</h1><p>皓齿明眸荷花面，飘然出水芙蓉仙。</p><p>天庭今日偶得暇，偏着素衣游人间。</p>]]></content>
      
      
      <categories>
          
          <category> 诗词歌赋 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 诗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>回忆南京初见</title>
      <link href="/2021/08/28/hui-yi-nan-jing-chu-jian/"/>
      <url>/2021/08/28/hui-yi-nan-jing-chu-jian/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="d2511c28fbb574c9c50165b2aab91809164db4fd0ca86c7c0d4e00c5ee8c4746"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-shrink">      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 旅行 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 逛吃 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基本语法</title>
      <link href="/2021/08/27/python-ji-ben-yu-fa/"/>
      <url>/2021/08/27/python-ji-ben-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="Python基本语法"><a href="#Python基本语法" class="headerlink" title="Python基本语法"></a>Python基本语法</h1><p>这一章我们主要来学习Python语言使用的基本语法，便于以后读写Python代码。当然我们只学习最重要的部分。</p><h2 id="Python基本数据类型和运算符"><a href="#Python基本数据类型和运算符" class="headerlink" title="Python基本数据类型和运算符"></a>Python基本数据类型和运算符</h2><p>Python中的<strong>变量</strong>需要先<strong>声明</strong>后使用。看下面一段代码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">counter <span class="token operator">=</span> <span class="token number">100</span>          <span class="token comment"># 整型变量</span>miles   <span class="token operator">=</span> <span class="token number">1000.0</span>       <span class="token comment"># 浮点型变量</span>name    <span class="token operator">=</span> <span class="token string">"fairy"</span>      <span class="token comment"># 字符串，注意字符串既可以用双引号，也可以用单引号，"fairy"和'fairy'在python里是等同的</span>flag    <span class="token operator">=</span> <span class="token boolean">True</span>   <span class="token comment"># 布尔类型，其值仅可以为True或False</span><span class="token keyword">print</span> <span class="token punctuation">(</span>counter<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>miles<span class="token punctuation">)</span><span class="token keyword">print</span> <span class="token punctuation">(</span>name<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行该代码可以得到：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">(base) PS C:\Users\15617&gt; 100(base) PS C:\Users\15617&gt; 1000.0(base) PS C:\Users\15617&gt; fairy<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这段代码中<strong>声明</strong>并<strong>赋值</strong>了整型变量counter，浮点型变量miles，字符串类型变量name，和布尔（Bool）类型的变量flag，然后调用Python自带的print<strong>函数</strong>输出各变量。函数的概念我们后面会讲，这里只使用不讨论。</p><p>注意布尔类型变量的值仅可为True或False，在运算和判断中等价于1和0，用于标记“是”和“非”。</p><p>整型、浮点型可以用<strong>运算符</strong>进行各种运算，如以下代码：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token number">10</span>b <span class="token operator">=</span> <span class="token number">21</span>c <span class="token operator">=</span> a <span class="token comment"># "="是赋值符号，也是一种运算符</span>c <span class="token operator">=</span> a <span class="token operator">+</span> b <span class="token comment"># 加法</span>c <span class="token operator">=</span> a <span class="token operator">-</span> b <span class="token comment"># 减法</span>c <span class="token operator">=</span> a <span class="token operator">*</span> b <span class="token comment"># 乘法</span>c <span class="token operator">=</span> a <span class="token operator">/</span> b <span class="token comment"># 除法</span>c <span class="token operator">=</span> a <span class="token operator">%</span> b <span class="token comment"># 取模，返回a除以b得到的余数</span>c <span class="token operator">=</span> a <span class="token operator">**</span> b <span class="token comment"># 幂运算，返回a的b次幂</span>c <span class="token operator">=</span> a <span class="token operator">//</span> b <span class="token comment"># 整除运算，将a/b的商向下取整，例如，9/2=4.5,9//2=4</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>字符串常见的运算符和运算如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">a <span class="token operator">=</span> <span class="token string">"mi"</span>b <span class="token operator">=</span> <span class="token string">"Xiao mi"</span>c <span class="token operator">=</span> b <span class="token operator">+</span> a <span class="token comment"># 字符串拼接，得到的c为新字符串"Xiao mimi"</span>c <span class="token operator">=</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># 通过索引获取字符，得到的字符c="i"，字符串中的字符从左到右索引分别为0，1，2，...</span>c <span class="token operator">=</span> b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token comment"># 字符串截取，这里截取了第0~4个字符，得到的字符串c="Xiao "，注意不包括第5个字符，注意空格也是字符</span>c <span class="token operator">=</span> a <span class="token keyword">in</span> b <span class="token comment"># 成员运算，如果字符串a存在于字符串b中，则c为布尔类型的True，否则为False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>咪咪可以试着更改一下参数或者a, b的值，运行一下代码，输出c的值，看看是否符合自己的预期。</p><p><strong>总结与延申：</strong></p><ul><li>这一节我们学习了基本变量的声明和计算，包括整数、浮点数、字符串、布尔类型等，加减乘除模，字符串的查询拼接等等；</li><li>Python中的一切运算最终都要落到变量的运算上来，所以如果想对变量做某种处理而不知道该怎么处理，就可以百度或者谷歌啦。</li></ul><p><strong>小练习:</strong></p><p>现在我们来做两个小练习，巩固一下学到的知识：</p><ul><li><p>已知三角形的三边长a=5, b=6, z=7，怎样在Python中计算三角形的面积？（提示，可以采用海伦公式）</p></li><li><p>假设现在变量x=10，y=20，怎样在Python中把x和y的值交换？</p></li></ul><h2 id="Python基本数据结构"><a href="#Python基本数据结构" class="headerlink" title="Python基本数据结构"></a>Python基本数据结构</h2><p>上一节我们学的是基本变量的赋值和运算规则，然而一个变量一个变量命名太慢了，如果我们有一大批数据需要存储，就很难给一个一个数据都分别设置变量来存储。这时候我们就需要数据结构来进行统一操作和处理。</p><p>Python中有四种基本的数据结构：列表，元组，字典，集合，如下面的代码所定义的：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"Xmm"</span><span class="token punctuation">,</span> <span class="token number">1994</span><span class="token punctuation">,</span> <span class="token number">4.16</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">]</span> <span class="token comment"># 列表中的元素可以为上一节讲的各种数据类型</span><span class="token builtin">tuple</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"Gs"</span><span class="token punctuation">,</span> <span class="token number">1995</span><span class="token punctuation">,</span> <span class="token number">2.28</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token comment"># 元组和列表一样，区别仅仅在于元组中的值定义好之后无法更改</span>dictionary <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"跟油油学Python"</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">8.15</span><span class="token punctuation">,</span> <span class="token string">"site"</span><span class="token punctuation">:</span><span class="token string">"formi_python"</span><span class="token punctuation">}</span> <span class="token comment"># 字典用于建立自定义的对应关系，每组对应关系包含一个key一个value，在冒号前后;key和value的值均可为上一节讲的各种数据类型</span><span class="token builtin">set</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'apple'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'apple'</span><span class="token punctuation">,</span> <span class="token string">'pear'</span><span class="token punctuation">,</span> <span class="token string">'orange'</span><span class="token punctuation">,</span> <span class="token string">'banana'</span><span class="token punctuation">}</span><span class="token comment"># 集合是一个无序的不重复元素集，每个元素可为上一节讲的各种数据类型。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们只介绍最常见的数据结构list的最常见的用法，别的数据结构我们知道有它们的主要特性就好啦，需要用的时候再学习：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span> <span class="token string">'green'</span><span class="token punctuation">,</span> <span class="token string">'blue'</span><span class="token punctuation">,</span> <span class="token string">'yellow'</span><span class="token punctuation">,</span> <span class="token string">'white'</span><span class="token punctuation">,</span> <span class="token string">'black'</span><span class="token punctuation">]</span> <span class="token comment"># 一个包含7个字符串的列表</span><span class="token comment"># 列表查询</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 输出list[0]，即第0个元素'red'</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 输出list[2]，即第2个元素'blue'</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 输出第-1个元素，即倒数第一个元素'black'</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 输出第-2个元素，即'white'，其他以此类推</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 输出第1~3个元素，即['green', 'blue', 'yellow']，注意得到的结果是一个新的list</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 输出第1~倒数第3个元素，即['green', 'blue', 'yellow']，注意得到的结果是一个新的list</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 输出第3个以及后面的所有元素，即['yellow', 'white', 'black']，注意得到的结果是一个新的list</span><span class="token comment"># 列表修改</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">'pink'</span> <span class="token comment"># 将第2个元素赋值为'pink'</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token comment"># 猜猜输出结果是什么？</span><span class="token builtin">list</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'orange'</span><span class="token punctuation">)</span> <span class="token comment"># 在列表末尾加入元素'orange'</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token comment"># 猜猜输出结果是什么？</span><span class="token keyword">del</span> <span class="token builtin">list</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token comment">#删除列表第2个元素</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token comment"># 猜猜输出结果是什么？</span><span class="token comment"># 列表脚本操作符</span>list1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>list2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>list1 <span class="token operator">+</span> list2<span class="token punctuation">)</span> <span class="token comment"># "+"可以将list1和list2拼接为新的list</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">3</span> <span class="token keyword">in</span> list1<span class="token punctuation">)</span> <span class="token comment"># "in"可以判断一个元素是否存在于一个list中，返回一个布尔类型的True或False，这里输出True</span><span class="token comment"># 列表常用函数</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># len()函数可以得到列表中元素的个数，返回值是整型</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># max()函数返回list中元素的最大值</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># min()函数返回list中元素的最小值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>试着运行一下这段代码，看得到的效果和我们预期的一样不一样吧~</p><p>注意这里都是用print()函数将结果直接输出出来了，当然也可以把结果赋给新的变量。</p><p><strong>总结与延申：</strong></p><ul><li>这一节我们学习了基本数据结构及操作，主要是list的操作，数据结构主要是为了方便大规模处理数据而存在的；</li><li>每个数据结构在Python中都有许多已经写好的<strong>函数</strong>可以进行处理，例如len(), max(), min()等，比较共性的功能基本都不需要我们自己去实现，百度或者谷歌一下就会用啦。</li></ul><p><strong>小练习：</strong></p><ul><li>请咪咪同学在Python中声明一个长度为10的list，前两个元素分别为数字0和1。然后通过计算得到其他元素的值，要求从第三个元素开始，每个元素都等于前两个元素之和。即“斐波那契数列”。</li><li>对上述得到的斐波那契数列list进行翻转。</li></ul><h2 id="Python条件语句与循环语句"><a href="#Python条件语句与循环语句" class="headerlink" title="Python条件语句与循环语句"></a>Python条件语句与循环语句</h2><p>有时候我们只在一定条件下才做运算和处理，这个时候就需要条件语句。</p><p>Python中的条件语句if用法如下：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">age <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"请输入你家狗狗的年龄: "</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token keyword">if</span> age <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"你是在逗我吧!"</span><span class="token punctuation">)</span><span class="token keyword">elif</span> age <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"相当于 14 岁的人。"</span><span class="token punctuation">)</span><span class="token keyword">elif</span> age <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"相当于 22 岁的人。"</span><span class="token punctuation">)</span><span class="token keyword">elif</span> age <span class="token operator">&gt;</span> <span class="token number">2</span><span class="token punctuation">:</span>    human <span class="token operator">=</span> <span class="token number">22</span> <span class="token operator">+</span> <span class="token punctuation">(</span>age <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">5</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"对应人类年龄: "</span><span class="token punctuation">,</span> human<span class="token punctuation">)</span> <span class="token comment">### 退出提示</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"点击 enter 键退出"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>比较简单易懂。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>环境搭建与Python入门</title>
      <link href="/2021/08/27/huan-jing-da-jian-yu-python-ru-men/"/>
      <url>/2021/08/27/huan-jing-da-jian-yu-python-ru-men/</url>
      
        <content type="html"><![CDATA[<h1 id="环境搭建与Python入门"><a href="#环境搭建与Python入门" class="headerlink" title="环境搭建与Python入门"></a>环境搭建与Python入门</h1><p>本文我们先了解什么是Python，然后在Windows上搭建Python环境，学会如何运行Python代码，再跑几个样例代码做测试，感受一下Python的魅力。</p><h2 id="Python是什么"><a href="#Python是什么" class="headerlink" title="Python是什么"></a>Python是什么</h2><p>计算机上的各种软件都是用编程语言写成的，编程语言可以沟通人与计算机，便于人们更好地使用计算机的算力和资源。</p><p>Python语言正是当前最流行的编程语言，主要特点是简单明了、功能强大、扩展性强，只有你想不到，没有它做不到。</p><p>Python在各种工程和科研领域都有应用，尤其在人工智能领域，几乎占垄断地位。</p><p>Python3目前正在完全取代Python2，二者大同小异，因此我们只学习Python3，也只用Python3，本文中的所有Python均指Python3. </p><p>我们后面要做的爬虫、NLP等内容都是基于Python语言的，所以对Python有基本了解是很有必要的。</p><h2 id="安装Anaconda"><a href="#安装Anaconda" class="headerlink" title="安装Anaconda"></a>安装Anaconda</h2><p>我们通过安装Anaconda来搭建Python环境。</p><p>Anaconda是当前最流行的Python发行版本，其中包含了Python和许多常用工具包及其依赖，还提供了conda、pip等工具用于环境和包管理，十分方便。</p><p>我们可以在<a href="https://www.anaconda.com/products/individual#Downloads">这里</a>下载最新的安装包，建议下载Windows 64 bit版本安装包，如下图所示：</p><p><img src="anaconda.png" alt="Anaconda下载"></p><p>安装完成后来测试一下。按下Windows键，找到Anaconda3 (64-bit) 文件夹，然后打开**Anaconda Powershell Prompt (Anaconda3)**，输入Python：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">(base) PS C:\Users\15617&gt; python<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>Anaconda Powershell Prompt (Anaconda3)就是我们后面经常要用到的PowerShell，这是Anaconda提供给我们的。</p><p>然后按下回车，看到类似如下输出即可表明Anaconda安装成功：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">(base) PS C:\Users\15617&gt; pythonPython 3.8.3 (default, Jul  2 2020, 17:30:36) [MSC v.1916 64 bit (AMD64)] :: Anaconda, Inc. on win32Type "help", "copyright", "credits" or "license" for more information.&gt;&gt;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>现在可以关闭PowerShell了。</p><h2 id="安装Sublime-Text-3"><a href="#安装Sublime-Text-3" class="headerlink" title="安装Sublime Text 3"></a>安装Sublime Text 3</h2><p>安装完了Python环境，我们现在需要一个编辑器来写Python代码，这里推荐的是Sublime Text 3，也是油油最喜欢的代码和文本编辑器。</p><p>Sublime Text3的特点是简洁轻便美观并且免费。唯一缺点是偶尔会弹出来购买提示框，按Esc忽略即可。</p><p>如下图，可以在<a href="https://www.sublimetext.com/3">这里</a>下载Windows 64 bit版本安装包。</p><p><img src="sublime.png" alt="Sublime Text 3下载"></p><p>安装还是建议安装在D盘，安装完成后在桌面上会出现Sublime Text 3的图标，打开即可使用。</p><h2 id="咪咪的第一个Python代码"><a href="#咪咪的第一个Python代码" class="headerlink" title="咪咪的第一个Python代码"></a>咪咪的第一个Python代码</h2><p>现在我们来写第一个Python代码。 </p><p>打开Sublime Text 3，在键盘上按<strong>Ctrl+N</strong>，这样就新建了一个文件。在文件中输入以下内容，只有一句话，调用print函数输出双引号引起来的字符串：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Beautiful fairy, happy fairy!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后在键盘上按<strong>Ctrl+S</strong>，在<strong>另存为</strong>框中选择一个目录，这里作为示例选的是E盘100dataset文件夹。</p><p>然后在文件名一栏输入<strong>test.py</strong>，点击保存。注意，目录应尽量避免中文名。</p><p>代码写完了，现在我们来执行这份名为<strong>test.py</strong>的代码。首先需要打开<strong>PowerShell</strong>并切换目录。</p><p>在文件管理器中打开你刚才选择的目录，在地址栏单击鼠标，然后<strong>Ctrl+C</strong>可以复制当前目录位置，如下图，我们复制了E盘100dataset文件夹的位置：</p><p><img src="path.png" alt="执行目录"></p><p>然后依照上部分讲的方式，打开PowerShell，在其中输入”cd “，然后<strong>Ctrl+V</strong>粘贴我们刚才复制的目录位置，再回车，即可将PowerShell的工作目录转移到我们代码的位置下，如这里我们转移到了”E:\100dataset”的位置：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">(base) PS C:\Users\15617&gt; cd E:\100dataset<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>现在我们可以执行代码了。在PowerShell中输入**”python “+待执行的.py文件名**，这里应该是“python test.py”，如下：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">(base) PS E:\100dataset&gt; python test.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后按下回车键，然后你就可以看到PowerShell窗口在空白行输出的字符串啦：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">(base) PS E:\100dataset&gt; Beautiful fairy, happy fairy!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>怎么样，是不是很简单。当然，字符串可以是其他任何内容。</p><h2 id="Python输出九九乘法口诀表"><a href="#Python输出九九乘法口诀表" class="headerlink" title="Python输出九九乘法口诀表"></a>Python输出九九乘法口诀表</h2><p>我们再来看一个例子。将test.py中的内容全部删掉，输入以下内容（可以复制粘贴）：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'{}x{}={}\t'</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> i<span class="token punctuation">,</span> i<span class="token operator">*</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后在PowerShell窗口再次输入：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">(base) PS E:\100dataset&gt; python test.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>并按下回车，怎么样，是不是得到了一个九九乘法口诀表？试着读一下代码，能读懂它的逻辑吗？</p><h2 id="Python输出心形"><a href="#Python输出心形" class="headerlink" title="Python输出心形"></a>Python输出心形</h2><p>将<strong>test.py</strong>中的内容全部删掉，输入以下内容：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> timewords <span class="token operator">=</span> <span class="token string">"lovemi"</span><span class="token keyword">for</span> item <span class="token keyword">in</span> words<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token punctuation">(</span>x<span class="token operator">-</span>y<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token builtin">len</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">*</span><span class="token number">0.05</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token operator">+</span><span class="token punctuation">(</span>y<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">3</span><span class="token operator">-</span><span class="token punctuation">(</span>x<span class="token operator">*</span><span class="token number">0.05</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">2</span><span class="token operator">*</span><span class="token punctuation">(</span>y<span class="token operator">*</span><span class="token number">0.1</span><span class="token punctuation">)</span><span class="token operator">**</span><span class="token number">3</span> <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token string">' '</span><span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">12</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1.5</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>以同样的方式运行，是不是得到了一个心形？这段代码比较复杂，不需要掌握，只是想展示一下Python语言的强大和精妙。</p><p>给咪咪比个❤哦~</p><h2 id="Python小游戏：贪吃蛇"><a href="#Python小游戏：贪吃蛇" class="headerlink" title="Python小游戏：贪吃蛇"></a>Python小游戏：贪吃蛇</h2><p>运行这个小游戏的代码需要先安装一个名为<strong>pygame</strong>的包，在PowerShell中输入以下内容并回车就可以使用pip安装新的工具包了：</p><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell">(base) PS C:\Users\15617&gt; pip install pygame<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我们以后还会用pip安装和管理其他工具包。等待安装完成，然后在test.py中输入以下代码并以前述方式运行：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> random<span class="token keyword">import</span> pygame<span class="token keyword">import</span> sys<span class="token keyword">from</span> pygame<span class="token punctuation">.</span><span class="token builtin">locals</span> <span class="token keyword">import</span> <span class="token operator">*</span> Snakespeed <span class="token operator">=</span> <span class="token number">17</span>Window_Width <span class="token operator">=</span> <span class="token number">1600</span>Window_Height <span class="token operator">=</span> <span class="token number">1000</span>Cell_Size <span class="token operator">=</span> <span class="token number">20</span>  <span class="token comment"># Width and height of the cells</span><span class="token comment"># Ensuring that the cells fit perfectly in the window. eg if cell size was</span><span class="token comment"># 10     and window width or windowheight were 15 only 1.5 cells would</span><span class="token comment"># fit.</span><span class="token keyword">assert</span> Window_Width <span class="token operator">%</span> Cell_Size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Window width must be a multiple of cell size."</span><span class="token comment"># Ensuring that only whole integer number of cells fit perfectly in the window.</span><span class="token keyword">assert</span> Window_Height <span class="token operator">%</span> Cell_Size <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">"Window height must be a multiple of cell size."</span>Cell_W <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>Window_Width <span class="token operator">/</span> Cell_Size<span class="token punctuation">)</span>  <span class="token comment"># Cell Width</span>Cell_H <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>Window_Height <span class="token operator">/</span> Cell_Size<span class="token punctuation">)</span>  <span class="token comment"># Cellc Height</span>  White <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>Black <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>Red <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>  <span class="token comment"># Defining element colors for the program.</span>Green <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>DARKGreen <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">155</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>DARKGRAY <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">)</span>YELLOW <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>Red_DARK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>BLUE <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span>BLUE_DARK <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span>  BGCOLOR <span class="token operator">=</span> Black  <span class="token comment"># Background color</span>  UP <span class="token operator">=</span> <span class="token string">'up'</span>DOWN <span class="token operator">=</span> <span class="token string">'down'</span>      <span class="token comment"># Defining keyboard keys.</span>LEFT <span class="token operator">=</span> <span class="token string">'left'</span>RIGHT <span class="token operator">=</span> <span class="token string">'right'</span> HEAD <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># Syntactic sugar: index of the snake's head</span>  <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> SnakespeedCLOCK<span class="token punctuation">,</span> DISPLAYSURF<span class="token punctuation">,</span> BASICFONT     pygame<span class="token punctuation">.</span>init<span class="token punctuation">(</span><span class="token punctuation">)</span>    SnakespeedCLOCK <span class="token operator">=</span> pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>Clock<span class="token punctuation">(</span><span class="token punctuation">)</span>    DISPLAYSURF <span class="token operator">=</span> pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_mode<span class="token punctuation">(</span><span class="token punctuation">(</span>Window_Width<span class="token punctuation">,</span> Window_Height<span class="token punctuation">)</span><span class="token punctuation">)</span>    BASICFONT <span class="token operator">=</span> pygame<span class="token punctuation">.</span>font<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token string">'freesansbold.ttf'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>set_caption<span class="token punctuation">(</span><span class="token string">'Snake'</span><span class="token punctuation">)</span>     showStartScreen<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        runGame<span class="token punctuation">(</span><span class="token punctuation">)</span>        showGameOverScreen<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">runGame</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># Set a random start point.</span>    startx <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> Cell_W <span class="token operator">-</span> <span class="token number">6</span><span class="token punctuation">)</span>    starty <span class="token operator">=</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> Cell_H <span class="token operator">-</span> <span class="token number">6</span><span class="token punctuation">)</span>    wormCoords <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'x'</span><span class="token punctuation">:</span> startx<span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">:</span> starty<span class="token punctuation">}</span><span class="token punctuation">,</span>                  <span class="token punctuation">{</span><span class="token string">'x'</span><span class="token punctuation">:</span> startx <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">:</span> starty<span class="token punctuation">}</span><span class="token punctuation">,</span>                  <span class="token punctuation">{</span><span class="token string">'x'</span><span class="token punctuation">:</span> startx <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">:</span> starty<span class="token punctuation">}</span><span class="token punctuation">]</span>    direction <span class="token operator">=</span> RIGHT     <span class="token comment"># Start the apple in a random place.</span>    apple <span class="token operator">=</span> getRandomLocation<span class="token punctuation">(</span><span class="token punctuation">)</span>     <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>  <span class="token comment"># main game loop</span>        <span class="token keyword">for</span> event <span class="token keyword">in</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># event handling loop</span>            <span class="token keyword">if</span> event<span class="token punctuation">.</span><span class="token builtin">type</span> <span class="token operator">==</span> QUIT<span class="token punctuation">:</span>                terminate<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> event<span class="token punctuation">.</span><span class="token builtin">type</span> <span class="token operator">==</span> KEYDOWN<span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">==</span> K_LEFT<span class="token punctuation">)</span> <span class="token keyword">and</span> direction <span class="token operator">!=</span> RIGHT<span class="token punctuation">:</span>                    direction <span class="token operator">=</span> LEFT                <span class="token keyword">elif</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">==</span> K_RIGHT<span class="token punctuation">)</span> <span class="token keyword">and</span> direction <span class="token operator">!=</span> LEFT<span class="token punctuation">:</span>                    direction <span class="token operator">=</span> RIGHT                <span class="token keyword">elif</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">==</span> K_UP<span class="token punctuation">)</span> <span class="token keyword">and</span> direction <span class="token operator">!=</span> DOWN<span class="token punctuation">:</span>                    direction <span class="token operator">=</span> UP                <span class="token keyword">elif</span> <span class="token punctuation">(</span>event<span class="token punctuation">.</span>key <span class="token operator">==</span> K_DOWN<span class="token punctuation">)</span> <span class="token keyword">and</span> direction <span class="token operator">!=</span> UP<span class="token punctuation">:</span>                    direction <span class="token operator">=</span> DOWN                <span class="token keyword">elif</span> event<span class="token punctuation">.</span>key <span class="token operator">==</span> K_ESCAPE<span class="token punctuation">:</span>                    terminate<span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token comment"># check if the Snake has hit itself or the edge</span>        <span class="token keyword">if</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span> <span class="token operator">==</span> Cell_W <span class="token keyword">or</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">or</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span> <span class="token operator">==</span> Cell_H<span class="token punctuation">:</span>            <span class="token keyword">return</span>  <span class="token comment"># game over</span>        <span class="token keyword">for</span> wormBody <span class="token keyword">in</span> wormCoords<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> wormBody<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span> <span class="token operator">==</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span> <span class="token keyword">and</span> wormBody<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span> <span class="token operator">==</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                <span class="token keyword">return</span>  <span class="token comment"># game over</span>         <span class="token comment"># check if Snake has eaten an apply</span>        <span class="token keyword">if</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span> <span class="token operator">==</span> apple<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span> <span class="token keyword">and</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span> <span class="token operator">==</span> apple<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token comment"># don't remove worm's tail segment</span>            apple <span class="token operator">=</span> getRandomLocation<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># set a new apple somewhere</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">del</span> wormCoords<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># remove worm's tail segment</span>         <span class="token comment"># move the worm by adding a segment in the direction it is moving</span>        <span class="token keyword">if</span> direction <span class="token operator">==</span> UP<span class="token punctuation">:</span>            newHead <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'x'</span><span class="token punctuation">:</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                       <span class="token string">'y'</span><span class="token punctuation">:</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">}</span>        <span class="token keyword">elif</span> direction <span class="token operator">==</span> DOWN<span class="token punctuation">:</span>            newHead <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'x'</span><span class="token punctuation">:</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                       <span class="token string">'y'</span><span class="token punctuation">:</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">}</span>        <span class="token keyword">elif</span> direction <span class="token operator">==</span> LEFT<span class="token punctuation">:</span>            newHead <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'x'</span><span class="token punctuation">:</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span>                <span class="token string">'x'</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">:</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span><span class="token punctuation">}</span>        <span class="token keyword">elif</span> direction <span class="token operator">==</span> RIGHT<span class="token punctuation">:</span>            newHead <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'x'</span><span class="token punctuation">:</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span>                <span class="token string">'x'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">:</span> wormCoords<span class="token punctuation">[</span>HEAD<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span><span class="token punctuation">}</span>        wormCoords<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> newHead<span class="token punctuation">)</span>        DISPLAYSURF<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>BGCOLOR<span class="token punctuation">)</span>        drawGrid<span class="token punctuation">(</span><span class="token punctuation">)</span>        drawWorm<span class="token punctuation">(</span>wormCoords<span class="token punctuation">)</span>        drawApple<span class="token punctuation">(</span>apple<span class="token punctuation">)</span>        drawScore<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>wormCoords<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span>        pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>        SnakespeedCLOCK<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>Snakespeed<span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">drawPressKeyMsg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    pressKeySurf <span class="token operator">=</span> BASICFONT<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">'Press a key to play.'</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> White<span class="token punctuation">)</span>    pressKeyRect <span class="token operator">=</span> pressKeySurf<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>    pressKeyRect<span class="token punctuation">.</span>topleft <span class="token operator">=</span> <span class="token punctuation">(</span>Window_Width <span class="token operator">-</span> <span class="token number">200</span><span class="token punctuation">,</span> Window_Height <span class="token operator">-</span> <span class="token number">30</span><span class="token punctuation">)</span>    DISPLAYSURF<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>pressKeySurf<span class="token punctuation">,</span> pressKeyRect<span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">checkForKeyPress</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span>QUIT<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>        terminate<span class="token punctuation">(</span><span class="token punctuation">)</span>    keyUpEvents <span class="token operator">=</span> pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span>KEYUP<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>keyUpEvents<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token keyword">if</span> keyUpEvents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>key <span class="token operator">==</span> K_ESCAPE<span class="token punctuation">:</span>        terminate<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> keyUpEvents<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>key  <span class="token keyword">def</span> <span class="token function">showStartScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    titleFont <span class="token operator">=</span> pygame<span class="token punctuation">.</span>font<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token string">'freesansbold.ttf'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>    titleSurf1 <span class="token operator">=</span> titleFont<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">'Snake!'</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> White<span class="token punctuation">,</span> DARKGreen<span class="token punctuation">)</span>    degrees1 <span class="token operator">=</span> <span class="token number">0</span>    degrees2 <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        DISPLAYSURF<span class="token punctuation">.</span>fill<span class="token punctuation">(</span>BGCOLOR<span class="token punctuation">)</span>        rotatedSurf1 <span class="token operator">=</span> pygame<span class="token punctuation">.</span>transform<span class="token punctuation">.</span>rotate<span class="token punctuation">(</span>titleSurf1<span class="token punctuation">,</span> degrees1<span class="token punctuation">)</span>        rotatedRect1 <span class="token operator">=</span> rotatedSurf1<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>        rotatedRect1<span class="token punctuation">.</span>center <span class="token operator">=</span> <span class="token punctuation">(</span>Window_Width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> Window_Height <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>        DISPLAYSURF<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>rotatedSurf1<span class="token punctuation">,</span> rotatedRect1<span class="token punctuation">)</span>         drawPressKeyMsg<span class="token punctuation">(</span><span class="token punctuation">)</span>         <span class="token keyword">if</span> checkForKeyPress<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># clear event queue</span>            <span class="token keyword">return</span>        pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>        SnakespeedCLOCK<span class="token punctuation">.</span>tick<span class="token punctuation">(</span>Snakespeed<span class="token punctuation">)</span>        degrees1 <span class="token operator">+=</span> <span class="token number">3</span>  <span class="token comment"># rotate by 3 degrees each frame</span>        degrees2 <span class="token operator">+=</span> <span class="token number">7</span>  <span class="token comment"># rotate by 7 degrees each frame</span>  <span class="token keyword">def</span> <span class="token function">terminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    pygame<span class="token punctuation">.</span>quit<span class="token punctuation">(</span><span class="token punctuation">)</span>    sys<span class="token punctuation">.</span>exit<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">getRandomLocation</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'x'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> Cell_W <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'y'</span><span class="token punctuation">:</span> random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> Cell_H <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">}</span>  <span class="token keyword">def</span> <span class="token function">showGameOverScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    gameOverFont <span class="token operator">=</span> pygame<span class="token punctuation">.</span>font<span class="token punctuation">.</span>Font<span class="token punctuation">(</span><span class="token string">'freesansbold.ttf'</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span>    gameSurf <span class="token operator">=</span> gameOverFont<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">'Game'</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> White<span class="token punctuation">)</span>    overSurf <span class="token operator">=</span> gameOverFont<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">'Over'</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> White<span class="token punctuation">)</span>    gameRect <span class="token operator">=</span> gameSurf<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>    overRect <span class="token operator">=</span> overSurf<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>    gameRect<span class="token punctuation">.</span>midtop <span class="token operator">=</span> <span class="token punctuation">(</span>Window_Width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>    overRect<span class="token punctuation">.</span>midtop <span class="token operator">=</span> <span class="token punctuation">(</span>Window_Width <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> gameRect<span class="token punctuation">.</span>height <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">+</span> <span class="token number">25</span><span class="token punctuation">)</span>     DISPLAYSURF<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>gameSurf<span class="token punctuation">,</span> gameRect<span class="token punctuation">)</span>    DISPLAYSURF<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>overSurf<span class="token punctuation">,</span> overRect<span class="token punctuation">)</span>    drawPressKeyMsg<span class="token punctuation">(</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>display<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>time<span class="token punctuation">.</span>wait<span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">)</span>    checkForKeyPress<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># clear out any key presses in the event queue</span>     <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> checkForKeyPress<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            pygame<span class="token punctuation">.</span>event<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># clear event queue</span>            <span class="token keyword">return</span>  <span class="token keyword">def</span> <span class="token function">drawScore</span><span class="token punctuation">(</span>score<span class="token punctuation">)</span><span class="token punctuation">:</span>    scoreSurf <span class="token operator">=</span> BASICFONT<span class="token punctuation">.</span>render<span class="token punctuation">(</span><span class="token string">'Score: %s'</span> <span class="token operator">%</span> <span class="token punctuation">(</span>score<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">,</span> White<span class="token punctuation">)</span>    scoreRect <span class="token operator">=</span> scoreSurf<span class="token punctuation">.</span>get_rect<span class="token punctuation">(</span><span class="token punctuation">)</span>    scoreRect<span class="token punctuation">.</span>topleft <span class="token operator">=</span> <span class="token punctuation">(</span>Window_Width <span class="token operator">-</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>    DISPLAYSURF<span class="token punctuation">.</span>blit<span class="token punctuation">(</span>scoreSurf<span class="token punctuation">,</span> scoreRect<span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">drawWorm</span><span class="token punctuation">(</span>wormCoords<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> coord <span class="token keyword">in</span> wormCoords<span class="token punctuation">:</span>        x <span class="token operator">=</span> coord<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span> <span class="token operator">*</span> Cell_Size        y <span class="token operator">=</span> coord<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span> <span class="token operator">*</span> Cell_Size        wormSegmentRect <span class="token operator">=</span> pygame<span class="token punctuation">.</span>Rect<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> Cell_Size<span class="token punctuation">,</span> Cell_Size<span class="token punctuation">)</span>        pygame<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>rect<span class="token punctuation">(</span>DISPLAYSURF<span class="token punctuation">,</span> DARKGreen<span class="token punctuation">,</span> wormSegmentRect<span class="token punctuation">)</span>        wormInnerSegmentRect <span class="token operator">=</span> pygame<span class="token punctuation">.</span>Rect<span class="token punctuation">(</span>            x <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">,</span> y <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">,</span> Cell_Size <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">,</span> Cell_Size <span class="token operator">-</span> <span class="token number">8</span><span class="token punctuation">)</span>        pygame<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>rect<span class="token punctuation">(</span>DISPLAYSURF<span class="token punctuation">,</span> Green<span class="token punctuation">,</span> wormInnerSegmentRect<span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">drawApple</span><span class="token punctuation">(</span>coord<span class="token punctuation">)</span><span class="token punctuation">:</span>    x <span class="token operator">=</span> coord<span class="token punctuation">[</span><span class="token string">'x'</span><span class="token punctuation">]</span> <span class="token operator">*</span> Cell_Size    y <span class="token operator">=</span> coord<span class="token punctuation">[</span><span class="token string">'y'</span><span class="token punctuation">]</span> <span class="token operator">*</span> Cell_Size    appleRect <span class="token operator">=</span> pygame<span class="token punctuation">.</span>Rect<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> Cell_Size<span class="token punctuation">,</span> Cell_Size<span class="token punctuation">)</span>    pygame<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>rect<span class="token punctuation">(</span>DISPLAYSURF<span class="token punctuation">,</span> Red<span class="token punctuation">,</span> appleRect<span class="token punctuation">)</span>  <span class="token keyword">def</span> <span class="token function">drawGrid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> Window_Width<span class="token punctuation">,</span> Cell_Size<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># draw vertical lines</span>        pygame<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>line<span class="token punctuation">(</span>DISPLAYSURF<span class="token punctuation">,</span> DARKGRAY<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> Window_Height<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> Window_Height<span class="token punctuation">,</span> Cell_Size<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># draw horizontal lines</span>        pygame<span class="token punctuation">.</span>draw<span class="token punctuation">.</span>line<span class="token punctuation">(</span>DISPLAYSURF<span class="token punctuation">,</span> DARKGRAY<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>Window_Width<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        main<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">except</span> SystemExit<span class="token punctuation">:</span>        <span class="token keyword">pass</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意，代码中”#”后面的部分为<strong>注释</strong>，是为了方便读者阅读代码而存在的，不具备语法意义。</p><p>在操作界面按下键盘上的方向键上下左右，就可以控制贪吃蛇的移动方向。怎么样，是不是很有趣~</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学Python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
